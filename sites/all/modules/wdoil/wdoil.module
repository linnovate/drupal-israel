<?php
// $Id:
/**
 * @file
 * The Doil module.
 */

/**
 * implementation of hook_theme()
 */
function wdoil_theme() {
  return array(
    'wdoil_user_block' => array(
      'arguments' => array('args' => NULL),
      'template' => 'wdoil-user-block'
    ),
    'wdoil_user_block_title' => array(
      'arguments' => array('args' => NULL),
    ),
  );
}

function template_preprocess_wdoil_user_block(&$vars) {
  foreach ($vars['args'] as $key => $value) {
    $vars[$key] = $value;
  }
  $vars['name'] = 'Zohar';
}

function theme_wdoil_user_block_title() {
  global $user;
  if ($user) {
    // Add user image if it exists.
    if (!empty($user->picture)) {
      $picture = file_create_url($user->picture);
      $alt = t("@user's picture", array('@user' => $user->name));
      $user_picture = theme('image', $picture, $alt, $alt, '', FALSE);
    }
    else $user_picture = '';
    $title = $user_picture . '<span class="wdoil-user-links">' . l(t('Logout'), 'logout') . '</span>' . t('Hello @user', array('@user' => $user->name));
  }
  else {
    $title = '<span class="wdoil-user-links">' . l(t('Login'), 'user/login') . ' | ' . l(t('Register'), 'user/register') . '</span>' . t('Hello @user', array('@user' => variable_get('anonymous')));
  }
  return $title;
}

/*function wdoil_preprocess(&$vars, $hook) {
  switch ($hook) {
    case "block":
      // Change the block's title:
      if ($vars['block']->module == 'wdoil' && $vars['block']->delta == '0') {
        $vars['block']->subject = theme('wdoil_user_block_title');
      }
      break;
  }
}*/

function wdoil_link_alter(&$links, $node) {
  foreach ($links as $key => $value) {
    if (substr($key, 0, 14) == 'notifications_') {
      // Remove notificatinos links, so we can move them around
      unset ($links[$key]);
    }
  }
}

/**
 * Implementation of hook_block().
 */
function wdoil_block($op = 'list', $delta = 0) {
  global $user;
  if ($op == 'list') {
    $block[0]['info'] = t('doil - Hello visitor');
    $block[0]['cache'] = BLOCK_NO_CACHE;
    $block[1]['info'] = t('doil - facated-serach copy');
    return $block;
  }
  elseif ($op == 'view') {
    switch($delta) {
      case '0':
        $block['subject'] = theme('wdoil_user_block_title');
        
        // Get the connected users. Taken from user module.
        $connected = module_invoke('user', 'block', 'view', 3);
        // Remove the 'online user' h3 tag.
        $args['connected_users'] .= preg_replace('/\<h3(.*)h3\>/', '', $connected['content']);

        // Get newset user. Taken from user module.
        $sql = "SELECT uid, name FROM {users} WHERE status != 0 AND access != 0 ORDER BY created DESC";
        $result = db_fetch_object(db_query($sql));
        $args['newest_user'] = t('!user is the newest member in the site.', array('!user' => theme('username', $result)));
        $block['content'] = theme('wdoil_user_block', $args);
      break;
      case '1':
      $block['subject'] = '';
      $block['content'] = '';//drupal_get_form('doil_copy_facated_search');
    }
    return $block;
  }
}
/**
 * Implementation of hook_forms().
 */
function wdoil_forms($form_id) {
  $forms = array();
  if ($form_id =='doil_copy_facated_search') {
    $forms['doil_copy_facated_search']['callback'] = 'faceted_search_ui_form';
  }
  return $forms;
}
/**
 * Implementation of hook_form_FORMID_alter().
 */
function wdoil_form_doil_copy_facated_search_alter(&$form, $form_state) {
  $form['#submit'] = array('faceted_search_ui_form_submit');
}
